#############################################################################
# $Id$
#
# Copyright (c) 2009 Sandro Santilli <strk@keybit.net>, Pierre Racine <pierre.racine@sbf.ulaval.ca>
# Copyright (c) 2011 Jorge Arevalo <jorge.arevalo@deimos-space.com>
# Copyright (c) 2011 Regents of the University of California
#   <bkpark@ucdavis.edu>
#
# This is free software; you can redistribute and/or modify it under
# the terms of the GNU General Public Licence. See the COPYING file.
#
#############################################################################

POSTGIS_SRC=@POSTGIS_SRCDIR@

# MingW hack: rather than use PGSQL_BINDIR directly, we change
# to the directory and then use "pwd" to return the path. This
# ensures that the returned path is in MSYS format, otherwise
# colons in drive letters will break PATH.
PGSQL_BINDIR=$(shell cd "@PGSQL_BINDIR@" && pwd)

# Where we put our regression installation
REGRESS_INSTALLDIR=$(POSTGIS_SRC)/regress/00-regress-install

#
# Put path from pg_config into front of search path
#
PATH := $(PGSQL_BINDIR):$(PATH)
export PATH

TEST_METADATA = \
	check_raster_columns.sql \
	check_raster_overviews.sql \
	$(NULL)

TEST_IO = \
	rt_io.sql \
	$(NULL)

TEST_FUNC = \
	create_rt_bytea_test.sql \
	rt_bytea.sql \
	create_rt_box2d_test.sql \
	rt_box2d.sql \
	rt_addband.sql \
	rt_band.sql \
	rt_asgdalraster.sql \
	rt_astiff.sql \
	rt_asjpeg.sql \
	rt_aspng.sql \
	$(NULL)

TEST_PROPS = \
	create_rt_properties_test.sql \
	rt_dimensions.sql \
	rt_scale.sql \
	rt_pixelsize.sql \
	rt_upperleft.sql \
	rt_rotation.sql \
	rt_georeference.sql \
	rt_set_properties.sql \
	create_rt_empty_raster_test.sql \
	rt_isempty.sql \
	rt_hasnoband.sql \
	rt_metadata.sql \
	$(NULL)

TEST_BANDPROPS = \
	create_rt_band_properties_test.sql \
	rt_band_properties.sql \
	rt_set_band_properties.sql \
	rt_summarystats.sql \
	rt_count.sql \
	rt_histogram.sql \
	rt_quantile.sql \
	rt_valuecount.sql \
	rt_valuepercent.sql \
	rt_bandmetadata.sql \
	$(NULL)

TEST_PIXEL = \
	rt_pixelvalue.sql \
	$(NULL)

TEST_UTILITY = \
	create_rt_utility_test.sql \
	rt_utility.sql \
	create_rt_mapalgebra_test.sql \
	rt_mapalgebraexpr.sql \
	rt_mapalgebrafct.sql \
	rt_mapalgebraexpr_2raster.sql \
	rt_reclass.sql \
	rt_resample.sql \
	rt_asraster.sql \
	$(NULL)

TEST_GIST = \
	create_rt_gist_test.sql \
	rt_above.sql \
	rt_below.sql \
	rt_contained.sql \
	rt_contain.sql \
	rt_left.sql \
	rt_overabove.sql \
	rt_overbelow.sql \
	rt_overlap.sql \
	rt_overleft.sql \
	rt_overright.sql \
	rt_right.sql \
	rt_same.sql \
	$(NULL)
	
TEST_SREL = \
	rt_spatial_relationship.sql \
	rt_intersects.sql \
	rt_samealignment.sql \
	$(NULL)
	
TEST_BUGS = \
	bug_test_car5.sql

TESTS = $(TEST_METADATA) $(TEST_IO) $(TEST_FUNC) \
		$(TEST_PROPS) $(TEST_BANDPROPS) $(TEST_PIXEL) \
		$(TEST_UTILITY) $(TEST_GIST) $(TEST_SREL) \
		$(TEST_BUGS)

all:
	@echo "Use 'make check' to run all tests"

clean distclean:
	$(RM) -f rtpostgis.sql

rtpostgis.sql: ../../rt_pg/rtpostgis.sql
	sed 's,$$libdir,$(REGRESS_INSTALLDIR)/lib,g' ../../rt_pg/rtpostgis.sql > rtpostgis.sql


check: rtpostgis.sql
	$(MAKE) -C ../../../regress postgis.sql staged-install
	$(MAKE) -C ../../rt_pg REGRESS=1 DESTDIR=$(REGRESS_INSTALLDIR) install
	@USE_VERSION=$(POSTGIS_PGSQL_VERSION) ../../../regress/run_test $(RUNTESTFLAGS) --raster $(TESTS)

#all: run_test

#run_test: run_test.in Makefile
#	sed -e "s#@POSTGIS_SRC@#$(POSTGIS_SRC)#" $< > $@
#	chmod +x $@

#post-install-check check: run_test
#	./run_test $(TESTS)

#clean:
#	$(RM) run_test
#	$(RM) testgdalraster

testgdalraster: testgdalraster.in Makefile
	sed -e "s#@POSTGIS_SRC@#$(POSTGIS_SRC)#" $< > $@
	chmod +x $@
	chmod +x ../../scripts/python/rtgdalraster.py
	./testgdalraster
